/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WrappedToken, WrappedTokenInterface } from "../WrappedToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_originAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrigin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOriginAddr",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200258538038062002585833981810160405281019062000037919062000467565b8282816003908051906020019062000051929190620001a1565b5080600490805190602001906200006a929190620001a1565b5050506200008d62000081620000d360201b60201c565b620000db60201b60201c565b846006819055508360079080519060200190620000ac929190620001a1565b5080600860006101000a81548160ff021916908360ff1602179055505050505050620005b0565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001af906200057b565b90600052602060002090601f016020900481019282620001d357600085556200021f565b82601f10620001ee57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021e57825182559160200191906001019062000201565b5b5090506200022e919062000232565b5090565b5b808211156200024d57600081600090555060010162000233565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6200027a8162000265565b81146200028657600080fd5b50565b6000815190506200029a816200026f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002f582620002aa565b810181811067ffffffffffffffff82111715620003175762000316620002bb565b5b80604052505050565b60006200032c62000251565b90506200033a8282620002ea565b919050565b600067ffffffffffffffff8211156200035d576200035c620002bb565b5b6200036882620002aa565b9050602081019050919050565b60005b838110156200039557808201518184015260208101905062000378565b83811115620003a5576000848401525b50505050565b6000620003c2620003bc846200033f565b62000320565b905082815260208101848484011115620003e157620003e0620002a5565b5b620003ee84828562000375565b509392505050565b600082601f8301126200040e576200040d620002a0565b5b815162000420848260208601620003ab565b91505092915050565b600060ff82169050919050565b620004418162000429565b81146200044d57600080fd5b50565b600081519050620004618162000436565b92915050565b600080600080600060a086880312156200048657620004856200025b565b5b6000620004968882890162000289565b955050602086015167ffffffffffffffff811115620004ba57620004b962000260565b5b620004c888828901620003f6565b945050604086015167ffffffffffffffff811115620004ec57620004eb62000260565b5b620004fa88828901620003f6565b935050606086015167ffffffffffffffff8111156200051e576200051d62000260565b5b6200052c88828901620003f6565b92505060806200053f8882890162000450565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200059457607f821691505b602082108103620005aa57620005a96200054c565b5b50919050565b611fc580620005c06000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d7146102fa578063a9059cbb1461032a578063dd62ed3e1461035a578063df1f29ee1461038a578063f2fde38b146103a957610121565b806370a0823114610268578063715018a61461029857806379cc6790146102a25780638da5cb5b146102be57806395d89b41146102dc57610121565b8063267b20fe116100f4578063267b20fe146101c2578063313ce567146101e05780633408e470146101fe578063395093511461021c57806340c10f191461024c57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103c5565b60405161013b9190611564565b60405180910390f35b61015e6004803603810190610159919061161f565b610457565b60405161016b919061167a565b60405180910390f35b61017c61047a565b60405161018991906116a4565b60405180910390f35b6101ac60048036038101906101a791906116bf565b610484565b6040516101b9919061167a565b60405180910390f35b6101ca6104b3565b6040516101d79190611564565b60405180910390f35b6101e8610545565b6040516101f5919061172e565b60405180910390f35b61020661055c565b60405161021391906116a4565b60405180910390f35b6102366004803603810190610231919061161f565b610566565b604051610243919061167a565b60405180910390f35b6102666004803603810190610261919061161f565b610610565b005b610282600480360381019061027d9190611749565b61069a565b60405161028f91906116a4565b60405180910390f35b6102a06106e2565b005b6102bc60048036038101906102b7919061161f565b61076a565b005b6102c6610806565b6040516102d39190611785565b60405180910390f35b6102e4610830565b6040516102f19190611564565b60405180910390f35b610314600480360381019061030f919061161f565b6108c2565b604051610321919061167a565b60405180910390f35b610344600480360381019061033f919061161f565b6109ac565b604051610351919061167a565b60405180910390f35b610374600480360381019061036f91906117a0565b6109cf565b60405161038191906116a4565b60405180910390f35b610392610a56565b6040516103a09291906117e0565b60405180910390f35b6103c360048036038101906103be9190611749565b610af3565b005b6060600380546103d49061183f565b80601f01602080910402602001604051908101604052809291908181526020018280546104009061183f565b801561044d5780601f106104225761010080835404028352916020019161044d565b820191906000526020600020905b81548152906001019060200180831161043057829003601f168201915b5050505050905090565b600080610462610bea565b905061046f818585610bf2565b600191505092915050565b6000600254905090565b60008061048f610bea565b905061049c858285610dbb565b6104a7858585610e47565b60019150509392505050565b6060600780546104c29061183f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee9061183f565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050505050905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b600080610571610bea565b9050610605818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610600919061189f565b610bf2565b600191505092915050565b610618610bea565b73ffffffffffffffffffffffffffffffffffffffff16610636610806565b73ffffffffffffffffffffffffffffffffffffffff161461068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611941565b60405180910390fd5b61069682826110c6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106ea610bea565b73ffffffffffffffffffffffffffffffffffffffff16610708610806565b73ffffffffffffffffffffffffffffffffffffffff161461075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611941565b60405180910390fd5b6107686000611225565b565b610772610bea565b73ffffffffffffffffffffffffffffffffffffffff16610790610806565b73ffffffffffffffffffffffffffffffffffffffff16146107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd90611941565b60405180910390fd5b6107f8826107f2610bea565b83610dbb565b61080282826112eb565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461083f9061183f565b80601f016020809104026020016040519081016040528092919081815260200182805461086b9061183f565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b6000806108cd610bea565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a906119d3565b60405180910390fd5b6109a08286868403610bf2565b60019250505092915050565b6000806109b7610bea565b90506109c4818585610e47565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060606006546007808054610a6b9061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a979061183f565b8015610ae45780601f10610ab957610100808354040283529160200191610ae4565b820191906000526020600020905b815481529060010190602001808311610ac757829003601f168201915b50505050509050915091509091565b610afb610bea565b73ffffffffffffffffffffffffffffffffffffffff16610b19610806565b73ffffffffffffffffffffffffffffffffffffffff1614610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611941565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd590611a65565b60405180910390fd5b610be781611225565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611af7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc790611b89565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610dae91906116a4565b60405180910390a3505050565b6000610dc784846109cf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e415781811015610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90611bf5565b60405180910390fd5b610e408484848403610bf2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ead90611c87565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90611d19565b60405180910390fd5b610f308383836114c1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad90611dab565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611049919061189f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110ad91906116a4565b60405180910390a36110c08484846114c6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112c90611e17565b60405180910390fd5b611141600083836114c1565b8060026000828254611153919061189f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111a8919061189f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161120d91906116a4565b60405180910390a3611221600083836114c6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361135a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135190611ea9565b60405180910390fd5b611366826000836114c1565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611f3b565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546114439190611f5b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114a891906116a4565b60405180910390a36114bc836000846114c6565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115055780820151818401526020810190506114ea565b83811115611514576000848401525b50505050565b6000601f19601f8301169050919050565b6000611536826114cb565b61154081856114d6565b93506115508185602086016114e7565b6115598161151a565b840191505092915050565b6000602082019050818103600083015261157e818461152b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115b68261158b565b9050919050565b6115c6816115ab565b81146115d157600080fd5b50565b6000813590506115e3816115bd565b92915050565b6000819050919050565b6115fc816115e9565b811461160757600080fd5b50565b600081359050611619816115f3565b92915050565b6000806040838503121561163657611635611586565b5b6000611644858286016115d4565b92505060206116558582860161160a565b9150509250929050565b60008115159050919050565b6116748161165f565b82525050565b600060208201905061168f600083018461166b565b92915050565b61169e816115e9565b82525050565b60006020820190506116b96000830184611695565b92915050565b6000806000606084860312156116d8576116d7611586565b5b60006116e6868287016115d4565b93505060206116f7868287016115d4565b92505060406117088682870161160a565b9150509250925092565b600060ff82169050919050565b61172881611712565b82525050565b6000602082019050611743600083018461171f565b92915050565b60006020828403121561175f5761175e611586565b5b600061176d848285016115d4565b91505092915050565b61177f816115ab565b82525050565b600060208201905061179a6000830184611776565b92915050565b600080604083850312156117b7576117b6611586565b5b60006117c5858286016115d4565b92505060206117d6858286016115d4565b9150509250929050565b60006040820190506117f56000830185611695565b8181036020830152611807818461152b565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061185757607f821691505b60208210810361186a57611869611810565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118aa826115e9565b91506118b5836115e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ea576118e9611870565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061192b6020836114d6565b9150611936826118f5565b602082019050919050565b6000602082019050818103600083015261195a8161191e565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119bd6025836114d6565b91506119c882611961565b604082019050919050565b600060208201905081810360008301526119ec816119b0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a4f6026836114d6565b9150611a5a826119f3565b604082019050919050565b60006020820190508181036000830152611a7e81611a42565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ae16024836114d6565b9150611aec82611a85565b604082019050919050565b60006020820190508181036000830152611b1081611ad4565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b736022836114d6565b9150611b7e82611b17565b604082019050919050565b60006020820190508181036000830152611ba281611b66565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611bdf601d836114d6565b9150611bea82611ba9565b602082019050919050565b60006020820190508181036000830152611c0e81611bd2565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c716025836114d6565b9150611c7c82611c15565b604082019050919050565b60006020820190508181036000830152611ca081611c64565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611d036023836114d6565b9150611d0e82611ca7565b604082019050919050565b60006020820190508181036000830152611d3281611cf6565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611d956026836114d6565b9150611da082611d39565b604082019050919050565b60006020820190508181036000830152611dc481611d88565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611e01601f836114d6565b9150611e0c82611dcb565b602082019050919050565b60006020820190508181036000830152611e3081611df4565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e936021836114d6565b9150611e9e82611e37565b604082019050919050565b60006020820190508181036000830152611ec281611e86565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f256022836114d6565b9150611f3082611ec9565b604082019050919050565b60006020820190508181036000830152611f5481611f18565b9050919050565b6000611f66826115e9565b9150611f71836115e9565b925082821015611f8457611f83611870565b5b82820390509291505056fea2646970667358221220884f1381fe57143ecc68552190ddca66afd51f325d4850afa9491f531afb484964736f6c634300080d0033";

type WrappedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedToken__factory extends ContractFactory {
  constructor(...args: WrappedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WrappedToken";
  }

  deploy(
    _chainId: BigNumberish,
    _originAddress: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WrappedToken> {
    return super.deploy(
      _chainId,
      _originAddress,
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<WrappedToken>;
  }
  getDeployTransaction(
    _chainId: BigNumberish,
    _originAddress: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _chainId,
      _originAddress,
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): WrappedToken {
    return super.attach(address) as WrappedToken;
  }
  connect(signer: Signer): WrappedToken__factory {
    return super.connect(signer) as WrappedToken__factory;
  }
  static readonly contractName: "WrappedToken";
  public readonly contractName: "WrappedToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenInterface {
    return new utils.Interface(_abi) as WrappedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrappedToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedToken;
  }
}
